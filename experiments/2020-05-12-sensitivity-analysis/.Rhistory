grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black')
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue')
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black')
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'))
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black')
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black')
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'))
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black')
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue')
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'))
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black')
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue')
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'), lty = 'solid')
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black', lwd = 1.5)
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue', lwd = 1.5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'), lty = 'solid', lwd = 1.5)
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black', lwd = 1.5)
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue', lwd = 1.5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'), lty = 'solid', lwd = 1.5, pch = 19)
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis(1)
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black', lwd = 1.5)
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue', lwd = 1.5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'), lty = 'solid', lwd = 1.5, pch = 20)
as.Date(devon[, 'Specimen.date'])
?axis.Date
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis.Date(1)
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis.Date(1, devon[, 'Specimen.date'])
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black', lwd = 1.5)
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue', lwd = 1.5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'), lty = 'solid', lwd = 1.5, pch = 20)
barplot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
?barplot
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h')
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h')
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'blue')
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 3)
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'blue')
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 3)
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'red')
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 3)
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'red', lwd = 3)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 3)
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'red', lwd = 3)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5)
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'red', lwd = 5)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2')
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue3')
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2')
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 0)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 1, mar = c(2,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 1, mar = c(2.5,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = '', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
rm(list = ls())
#dat <- read.csv('coronavirus-cases_latest.csv')
dat <- read.csv('https://coronavirus.data.gov.uk/downloads/csv/coronavirus-cases_latest.csv')
# isolate Exeter cases
exe <- dat[dat[,1]=='Exeter',]
devon <- dat[dat[,1]=='Devon',]
par(las = 1)
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'n', axes = FALSE,
xlab = 'Date', ylab = 'Daily lab confirmed cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter')
grid()
axis.Date(1, devon[, 'Specimen.date'])
axis(2)
lines(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'black', lwd = 1.5)
lines(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'], type = 'o', pch = 20, col = 'blue', lwd = 1.5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('black', 'blue'), lty = 'solid', lwd = 1.5, pch = 20)
par(las = 1, mar = c(2.5,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = '', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 1, mar = c(2.5,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = '', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
par(las = 1, mar = c(2.5,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = '', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('skyblue2', 'tomato2'), lty = 'solid', lwd=5)
par(las = 1, mar = c(2.5,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = '', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('skyblue2', 'tomato2'), lty = 'solid', lwd=5, bty = 'n')
par(las = 1, mar = c(2.5,4,4,1))
plot(as.Date(devon[, 'Specimen.date']), devon[, 'Daily.lab.confirmed.cases'],
xlab = '', ylab = 'cases', main = 'Daily lab-confirmed Coronavirus cases in Devon & Exeter',
type = 'h', lwd = 5, col = 'skyblue2', bty = 'n')
grid()
points(as.Date(exe[, 'Specimen.date']), exe[, 'Daily.lab.confirmed.cases'],
xlab = 'Date', ylab = 'cases', main = 'Daily lab confirmed Coronavirus cases in Devon & Exeter',
type = 'h', col = 'tomato2', lwd = 5)
legend('topleft', legend = c('Devon', 'Exeter'), col = c('skyblue2', 'tomato2'), lty = 'solid', lwd=5, bty = 'n')
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv('https://coronavirus.data.gov.uk/downloads/csv/coronavirus-cases_latest.csv')
# isolate Exeter cases
exe <- dat[dat[,1]=='Exeter',]
devon <- dat[dat[,1]=='Devon',]
edin <- dat[dat[,1]=='Edinburgh',]
dim(edin)
edin
dat <- read.csv('https://coronavirus.data.gov.uk/downloads/csv/coronavirus-cases_latest.csv')
# isolate Exeter cases
exe <- dat[dat[,1]=='Exeter',]
devon <- dat[dat[,1]=='Devon',]
mk <- dat[dat[,1]=='Milton Keynes',]
dim(mk)
hk <- dat[dat[,1]=='Hackney',]
hk
dim(Hackney)
dim(hk)
rm(list = ls())
dat[dat[,1]=='West Dorset',]
dat <- read.csv('https://coronavirus.data.gov.uk/downloads/csv/coronavirus-cases_latest.csv')
# isolate Exeter cases
exe <- dat[dat[,1]=='Exeter',]
devon <- dat[dat[,1]=='Devon',]
mk <- dat[dat[,1]=='Milton Keynes',]
hk <- dat[dat[,1]=='Hackney',]
hk <- dat[dat[,1]=='West Dorset',]
hk
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,9))
rm(list = 'ls()')
rm(list = ls())
getwd()
setwd('experiments/2020-05-12-sensitivity-analysis/')
knitr::opts_chunk$set(echo = TRUE)
library(sensitivity)
library(DiceKriging)
library(dplyr)
source("https://raw.githubusercontent.com/dougmcneall/packages-git/master/emtools.R")
# Need to fix the parameter names
X <- read.csv('lhs.csv', sep = "")
parnames = colnames(X)
# A container for all the data
# Each row has a "fingerprint" that contains the values of all the changed parameters,
# and the values of the parameters are also given.
# This alters the order of the parameters.
dat <- read.csv('output/results.csv.bz2')
# find an
unique_fingerprint = unique(dat$fingerprint)
# Use the dplyr package to find the maximum number of infections for each ensemble member.
max_infections <- dat %>%
group_by(fingerprint) %>%
summarize(max(I))
reorder_ix <- match(unique_fingerprint, max_infections$fingerprint)
max_infections <- max_infections[reorder_ix, ]
head(max_infections)
d <- ncol(X)
X.norm <- normalize(X)
y <- pull(max_infections,'max(I)')
par(mfrow = c(1,3), las = 1)
for(i in 1:d){
plot(X[ ,i], y, xlab = parnames[i], ylab = 'max(I)')
}
# Fit an emulator using DiceKriging
fit = km(~., design=X.norm, response=y)
# a quick check of the emulator using cross validation
loo = leaveOneOut.km(fit, type = 'UK', trend.reestim = TRUE)
ylim = range(loo$mean - (2*loo$sd),loo$mean + (2*loo$sd) )
plot(y, loo$mean, xlab = 'max(I)', ylab = 'emulator prediction', ylim = ylim)
segments(x0 = y, y0 = loo$mean - (2*loo$sd), x1 = y, y1 = loo$mean + (2*loo$sd))
abline(0,1)
# Generate a design for the FAST99 analysis
X.fast <- fast99(model = NULL, factors = colnames(X), n = 3000,
q = "qunif", q.arg = list(min = 0, max = 1))
# Predict the response at the FAST99 design points using the emulator
pred.fast = predict(fit, newdata = X.fast$X, type = 'UK')
# Calculate the sensitivity indices
fast.tell <- tell(X.fast, pred.fast$mean)
bp.convert <- function(fastmodel){
# get the FAST summary into an easier format for barplot
fast.summ <- print(fastmodel)
fast.diff <- fast.summ[ ,2] - fast.summ[ ,1]
fast.bp <- t(cbind(fast.summ[ ,1], fast.diff))
fast.bp
}
par(las = 2, mar = c(9,5,3,2))
barplot(bp.convert(fast.tell), col = c('skyblue', 'grey'), ylab = 'relative sensitivity', main = 'FAST99 Sensitivity')
legend('topleft',legend = c('Main effect', 'Interactions'), fill = c('skyblue', 'grey') )
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,9))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(3,3), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat[ix,i], pred.oat$mean[ix],
xlim = c(0,1), ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat[ix, i], rev(X.oat[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat[ix,i], pred.oat$mean[ix], xlim = c(0,1), lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(3,1), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat[ix,i], pred.oat$mean[ix],
xlim = c(0,1), ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat[ix, i], rev(X.oat[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat[ix,i], pred.oat$mean[ix], xlim = c(0,1), lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(1,3), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat[ix,i], pred.oat$mean[ix],
xlim = c(0,1), ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat[ix, i], rev(X.oat[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat[ix,i], pred.oat$mean[ix], xlim = c(0,1), lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
lhs
design
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
X.oat.un <- unnormalize(X.oat, mins = apply(X, 2,min), maxes = (apply, X,2,max))
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
X.oat.un <- unnormalize(X.oat, mins = apply(X, 2,min), maxes = apply(X, 2,max))
unnormalize
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
X.oat.un <- unnormalize(X.oat, un.mins = apply(X, 2,min), un.maxes = apply(X, 2,max))
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(1,3), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat[ix,i], pred.oat$mean[ix],
xlim = c(0,1), ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat[ix, i], rev(X.oat[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat[ix,i], pred.oat$mean[ix], xlim = c(0,1), lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
head(X)
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
X.oat.un <- unnormalize(X.oat, un.mins = apply(X, 2,min), un.maxes = apply(X, 2,max))
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(1,3), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat.un[ix,i], pred.oat$mean[ix],
xlim = c(0,1), ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat.un[ix, i], rev(X.oat.un[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat[ix,i], pred.oat$mean[ix], xlim = c(0,1), lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
X.oat.un <- unnormalize(X.oat, un.mins = apply(X, 2,min), un.maxes = apply(X, 2,max))
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(1,3), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat.un[ix,i], pred.oat$mean[ix],
xlim = c(0,1), ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat.un[ix, i], rev(X.oat.un[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat.un[ix,i], pred.oat$mean[ix], xlim = c(0,1), lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
n.oat <- 21
X.oat <- oaat.design(X.norm, n = n.oat, hold = rep(0.5,3))
colnames(X.oat) <- colnames(X)
pred.oat <- predict(fit, newdata = X.oat, type = 'UK')
X.oat.un <- unnormalize(X.oat, un.mins = apply(X, 2,min), un.maxes = apply(X, 2,max))
col.transp <- adjustcolor('grey', alpha = 0.5)
par(mfrow = c(1,3), oma = c(0.1,0.1,3,0.1))
for(i in 1:3){
ix <- seq(from = ((i*n.oat) - (n.oat-1)), to =  (i*n.oat), by = 1)
plot(X.oat.un[ix,i], pred.oat$mean[ix],
ylim = range(pred.oat$mean),
xlab = parnames[i], ylab = 'maximum infections',
type= 'n')
polygon(x = c(X.oat.un[ix, i], rev(X.oat.un[ix, i])),
y = c(pred.oat$mean[ix] - (2*pred.oat$sd[ix]), rev(pred.oat$mean[ix] + (2*pred.oat$sd[ix]))),
col = col.transp, border = col.transp)
lines(X.oat.un[ix,i], pred.oat$mean[ix], lty = 'solid')
}
mtext('One-at-a-time sensitivity', side = 3, outer = TRUE, cex = 1.5)
test = read.csv(file = '1i302807v1i302807v0i2192647v1i0v0i9080696x001/TotalInfections.dat.bz2'
getwd()
)
test = read.csv(file = 'output/1i302807v1i302807v0i2192647v1i0v0i9080696x001/TotalInfections.dat.bz2')
dim(test)
head(test)
test
plot(test)
plot(1:length(test,test))
plot(1:length(test),test)
names(test)
head(test)
str(test)
head(test)
#test = read.csv(file = 'output/1i302807v1i302807v0i2192647v1i0v0i9080696x001/TotalInfections.dat.bz2')
test = read.csv(file = 'output/1i302807v1i302807v0i2192647v1i0v0i9080696x001/Tincidence.dat.bz2')
#test = read.csv(file = 'output/1i302807v1i302807v0i2192647v1i0v0i9080696x001/TotalInfections.dat.bz2')
test = read.csv(file = 'output/1i302807v1i302807v0i2192647v1i0v0i9080696x001/incidence.dat.bz2')
dim(test)
test
str(test)
head(names(test))
dim(test)
dim(test[[1]])
test = read.csv(file = 'output/1i302807v1i302807v0i2192647v1i0v0i9080696x001/TotalInfections.dat.bz2')
